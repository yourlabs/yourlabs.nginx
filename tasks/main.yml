---

- name: Ensure docker was setup once on this host
  include_role: name=yourlabs.roleonce
  vars:
    rolenames: [yourlabs.io/oss/yourlabs.docker]

- name: Set Log driver
  set_fact:
    log_driver: "{{ 'syslog' if ansible_os_family == 'Alpine' else 'journald' }}"

- name: Install passlib library for ansible htpasswd module
  pip:
    name: passlib
    state: present

- name: Create nginx-proxy container with jwilder/nginx-proxy
  docker_container:
    pull: true
    name: nginx-proxy
    image: '{{ nginx_image }}'
    hostname: nginx-proxy
    published_ports: ['80:80', '443:443']
    restart_policy: always
    log_driver: '{{ log_driver }}'
    volumes:
    - '{{ nginx_home }}conf.d:/etc/nginx/conf.d'
    - '{{ nginx_home }}vhosts.d:/etc/nginx/vhost.d'
    - '{{ nginx_home }}certs:/etc/nginx/certs:ro'
    - '{{ nginx_home }}html:/usr/share/nginx/html:rw'
    - '{{ nginx_home }}htpasswd:/etc/nginx/htpasswd:ro'
    - /var/run/docker.sock:/tmp/docker.sock:ro
    labels: com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=nginx-letsencrypt

- name: Create nginx-letsencrypt container with jrcs/letsencrypt-nginx-proxy-companion
  when: letsencrypt_email|default()
  docker_container:
    pull: true
    name: nginx-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes_from: [nginx-proxy]
    restart_policy: always
    log_driver: '{{ log_driver }}'
    env:
      ACME_CA_URI: '{{ letsencrypt_uri }}'
    volumes:
    - '{{ nginx_home }}certs:/etc/nginx/certs:rw'
    - /var/run/docker.sock:/var/run/docker.sock:ro
